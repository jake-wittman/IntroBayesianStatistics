#########################################
# WinBUGS code for Linear hierarchical modeling ##
# in a two-way ANOVA Cross-protocol data #######
#########################################

# The code compares three candidate models for the meta-analysis data
# Model 1: full model with study effect, clinical-unit effect, and interaction term
# Model 2: reduced model with no interaction
# Model 3: reduced model with only study main effect
# Model 4: reduced model with only unit main effect

# Use DIC and WAIC to compare the three models
# DIC can be obtained directly
# WAIC relies on posterior of p(y[i,j] | theta[i,j]) and log p(y[i,j] | theta[i,j]) 

# Trick: fit the three models simultaneously by replicating the data

model {

	for(i in 1:I) {			 # loop for 6 studies
		for(j in 1:J) {		# loop for 18 clinical units   
		 
			Y1[i,j] ~ dnorm(theta1[i,j], P[i,j])     
			theta1[i,j] <- a1[i]+b1[j]+s1[i,j]	  # full model
			
			Y2[i,j] ~ dnorm(theta2[i,j], P[i,j])    
			theta2[i,j] <- a2[i] + b2[j]           # drop interactions
			
			Y3[i,j] ~ dnorm(theta3[i,j], P[i,j])   
			theta3[i,j] <- a3[i]     		       # study effect only
			
			Y4[i,j] ~ dnorm(theta4[i,j], P[i,j])   
			theta4[i,j] <- b4[j]     		       # unit effect only

			s1[i,j] ~ dnorm(0.0,prec.s1)		# prior on s[i,j]
			
			lppd1[i,j] <- log(sqrt(P[i,j])) - (Y1[i,j]-theta1[i,j])*(Y1[i,j]-theta1[i,j])*P[i,j]/2
			ppd1[i,j] <- exp(lppd1[i,j])
			
			lppd2[i,j] <- log(sqrt(P[i,j])) - (Y2[i,j]-theta2[i,j])*(Y2[i,j]-theta2[i,j])*P[i,j]/2
			ppd2[i,j] <- exp(lppd2[i,j])
			
			lppd3[i,j] <- log(sqrt(P[i,j])) - (Y3[i,j]-theta3[i,j])*(Y3[i,j]-theta3[i,j])*P[i,j]/2
			ppd3[i,j] <- exp(lppd3[i,j])
			
			lppd4[i,j] <- log(sqrt(P[i,j])) - (Y4[i,j]-theta4[i,j])*(Y4[i,j]-theta4[i,j])*P[i,j]/2
			ppd4[i,j] <- exp(lppd4[i,j])
		
		}	# end of loop j
	}		# end of loop i	

    # Priors
    for(i in 1:I) {
		a1[i] ~ dnorm(0, 0.0001)               # prior on a[i]
		a2[i] ~ dnorm(0, 0.0001)               # prior on a[i]
		a3[i] ~ dnorm(0, 0.0001)               # prior on a[i]
    }
	for(j in 1:J) {
		b1[j] ~ dnorm(0.0,prec.b1)			  # prior on b[j]
		b2[j] ~ dnorm(0.0,prec.b2)			  # prior on b[j]
		b4[j] ~ dnorm(0.0,prec.b4)			  # prior on b[j]
	}	

	prec.b1 <- 1/(b1_sigma*b1_sigma)    
	prec.b2 <- 1/(b2_sigma*b2_sigma)   	
	prec.b4 <- 1/(b4_sigma*b4_sigma)  	
	prec.s1 <- 1/(s1_sigma*s1_sigma)	
	b1_sigma ~ dunif(0.01, 100)			# clinic-level s.d.
	b2_sigma ~ dunif(0.01, 100)			# clinic-level s.d.
	b4_sigma ~ dunif(0.01, 100)			# clinic-level s.d.
	s1_sigma ~ dunif(0.01,100)			 # s.d. of s_ij's	
}


## DATA:
list(I = 6,    # number of studies
     J = 18,   # number of clinics (at most)
     
	 Y1 = structure(
  						.Data = c(0.814, -0.203, -0.133, NA, -0.715, 0.739, 0.118, 
        				  NA, NA, 0.271, NA, -0.0023, -0.076, 0.651, -0.249, 
        				  0.0026, NA, 1.217, NA, NA, NA, NA, -0.24236, 
          				0.00928, 0.8073, -0.51149, 1.93893, 1.07922, NA, 0.29996, 1.41267, 
						  -0.46985, 0.09798, 0.29206, 0.19483, 0.16531, -0.40556, NA, 0.21807, 
        				  NA, -0.54369, NA, -0.04707, 0.23272, 0.21767, -0.27662, 
          				0.79159, -0.10268, 0.6576, 0.0604, -0.27151, 0.7048, 0.6054, 0.38503, 
        	  			0.29848, NA, -2.20587, NA, -0.73148, NA, 0.9134, 0.13073,
          				-0.06594, -0.23161, 1.26396, -0.43129, -0.02205, 0.42073, -0.16309, 
          				0.60758, 0.18718, 0.17248, 0.2597, NA, 0.35022, NA, 0.60031, 
          				NA, -0.09084, NA, NA, 0.75204, -0.35662, 0.83652, 
          				-0.16441, -0.11157, 0.85996, -0.22899, NA, 0.16011, NA,
          				NA, 0.14491, NA, 0.04111, 0.22188, 0.09871, 0.01708, 0.35535, 
          				0.20278, 0.8073, 0.37308, -0.64, -0.01021, 0.0813, 1.04416, -0.20111, 
        				  0.20344), .Dim = c(6, 18)), 

	 Y2 = structure(
  						.Data = c(0.814, -0.203, -0.133, NA, -0.715, 0.739, 0.118, 
        				  NA, NA, 0.271, NA, -0.0023, -0.076, 0.651, -0.249, 
        				  0.0026, NA, 1.217, NA, NA, NA, NA, -0.24236, 
          				0.00928, 0.8073, -0.51149, 1.93893, 1.07922, NA, 0.29996, 1.41267, 
						  -0.46985, 0.09798, 0.29206, 0.19483, 0.16531, -0.40556, NA, 0.21807, 
        				  NA, -0.54369, NA, -0.04707, 0.23272, 0.21767, -0.27662, 
          				0.79159, -0.10268, 0.6576, 0.0604, -0.27151, 0.7048, 0.6054, 0.38503, 
        	  			0.29848, NA, -2.20587, NA, -0.73148, NA, 0.9134, 0.13073,
          				-0.06594, -0.23161, 1.26396, -0.43129, -0.02205, 0.42073, -0.16309, 
          				0.60758, 0.18718, 0.17248, 0.2597, NA, 0.35022, NA, 0.60031, 
          				NA, -0.09084, NA, NA, 0.75204, -0.35662, 0.83652, 
          				-0.16441, -0.11157, 0.85996, -0.22899, NA, 0.16011, NA,
          				NA, 0.14491, NA, 0.04111, 0.22188, 0.09871, 0.01708, 0.35535, 
          				0.20278, 0.8073, 0.37308, -0.64, -0.01021, 0.0813, 1.04416, -0.20111, 
        				  0.20344), .Dim = c(6, 18)), 

	 Y3 = structure(
  						.Data = c(0.814, -0.203, -0.133, NA, -0.715, 0.739, 0.118, 
        				  NA, NA, 0.271, NA, -0.0023, -0.076, 0.651, -0.249, 
        				  0.0026, NA, 1.217, NA, NA, NA, NA, -0.24236, 
          				0.00928, 0.8073, -0.51149, 1.93893, 1.07922, NA, 0.29996, 1.41267, 
						  -0.46985, 0.09798, 0.29206, 0.19483, 0.16531, -0.40556, NA, 0.21807, 
        				  NA, -0.54369, NA, -0.04707, 0.23272, 0.21767, -0.27662, 
          				0.79159, -0.10268, 0.6576, 0.0604, -0.27151, 0.7048, 0.6054, 0.38503, 
        	  			0.29848, NA, -2.20587, NA, -0.73148, NA, 0.9134, 0.13073,
          				-0.06594, -0.23161, 1.26396, -0.43129, -0.02205, 0.42073, -0.16309, 
          				0.60758, 0.18718, 0.17248, 0.2597, NA, 0.35022, NA, 0.60031, 
          				NA, -0.09084, NA, NA, 0.75204, -0.35662, 0.83652, 
          				-0.16441, -0.11157, 0.85996, -0.22899, NA, 0.16011, NA,
          				NA, 0.14491, NA, 0.04111, 0.22188, 0.09871, 0.01708, 0.35535, 
          				0.20278, 0.8073, 0.37308, -0.64, -0.01021, 0.0813, 1.04416, -0.20111, 
        				  0.20344), .Dim = c(6, 18)), 

	 Y4 = structure(
  						.Data = c(0.814, -0.203, -0.133, NA, -0.715, 0.739, 0.118, 
        				  NA, NA, 0.271, NA, -0.0023, -0.076, 0.651, -0.249, 
        				  0.0026, NA, 1.217, NA, NA, NA, NA, -0.24236, 
          				0.00928, 0.8073, -0.51149, 1.93893, 1.07922, NA, 0.29996, 1.41267, 
						  -0.46985, 0.09798, 0.29206, 0.19483, 0.16531, -0.40556, NA, 0.21807, 
        				  NA, -0.54369, NA, -0.04707, 0.23272, 0.21767, -0.27662, 
          				0.79159, -0.10268, 0.6576, 0.0604, -0.27151, 0.7048, 0.6054, 0.38503, 
        	  			0.29848, NA, -2.20587, NA, -0.73148, NA, 0.9134, 0.13073,
          				-0.06594, -0.23161, 1.26396, -0.43129, -0.02205, 0.42073, -0.16309, 
          				0.60758, 0.18718, 0.17248, 0.2597, NA, 0.35022, NA, 0.60031, 
          				NA, -0.09084, NA, NA, 0.75204, -0.35662, 0.83652, 
          				-0.16441, -0.11157, 0.85996, -0.22899, NA, 0.16011, NA,
          				NA, 0.14491, NA, 0.04111, 0.22188, 0.09871, 0.01708, 0.35535, 
          				0.20278, 0.8073, 0.37308, -0.64, -0.01021, 0.0813, 1.04416, -0.20111, 
        				  0.20344), .Dim = c(6, 18)), 

	P = structure(
  						.Data = c(1.55472, 0.63796, 0.66422, 0.0001, 2.22103, 3.02457, 
						  1.38408, 0.0001, 0.0001, 2.93207, 0.0001, 1.33034, 1.19442, 2.86302, 
	  					2.39627, 2.20785, 0.0001, 1.49815, 0.0001, 0.0001, 0.0001, 0.0001, 
	  					1.7054, 4.22496, 2.52965, 3.21071, 1.55576, 2.06012, 0.0001, 4.43682, 
	  					0.74642, 3.74025, 4.20441, 3.2145, 5.44972, 5.87876, 4.61706, 0.0001, 
	  					1.91103, 0.0001, 4.26425, 0.0001, 2.70169, 5.39252, 1.96031, 6.63744, 
	  					1.6591, 10.12627, 5.15778, 12.20163, 9.12072, 8.56466, 8.09651, 6.76019,
	  					3.42682, 0.0001, 0.73295, 0.0001, 4.53736, 0.0001, 1.97782, 5.93378, 
	  					2.38223, 6.65423, 1.27929, 10.4889, 5.42775, 10.75121, 9.06588, 9.24314,
	  					9.41177, 8.3589, 6.15393, 0.0001, 2.2114, 0.0001, 0.66407, 0.0001, 
	  					2.47915, 0.0001, 0.0001, 0.48528, 3.72857, 1.14836, 1.1933, 0.49845, 
	  					3.32753, 6.14448, 0.0001, 2.43433, 0.0001, 0.0001, 0.64786, 0.0001, 
	  					3.31796, 3.30026, 3.31, 12.10082, 5.82853, 21.92399, 4.72651, 6.29366, 
	  					0.74707, 3.86906, 4.74962, 4.17327, 2.72863, 2.50757), .Dim = c(6, 18))
	)    # end of data list


## INITS (for three chains):
list(b1_sigma=5, b2_sigma=5, b4_sigma=5, s1_sigma=5, 
      a1=c(3,3,3,3,3,3), a2=c(3,3,3,3,3,3), a3=c(3,3,3,3,3,3), 
      b1=c(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2),      
      b2=c(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2),
 	 b4=c(2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2))

list(b1_sigma=25, b2_sigma=25, b4_sigma=25, s1_sigma=25, 
      a1=c(3,3,3,3,3,3), a2=c(3,3,3,3,3,3), a3=c(3,3,3,3,3,3),
      b1=c(-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10),
	  b2=c(-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10),
	  b4=c(-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10,-10))

list(b1_sigma=50, b2_sigma=50, b4_sigma=50, s1_sigma=50, 
      a1=c(-3,-3,-3,-3,-3,-3), a2=c(-3,-3,-3,-3,-3,-3),  a3=c(-3,-3,-3,-3,-3,-3),
	  b1=c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20),
	  b2=c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20),
	  b4=c(20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20))

